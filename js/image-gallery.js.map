{"version":3,"sources":["image-gallery.js"],"names":["fitCaption","$c","$image","find","$caption","w","width","h","height","r","captionWidth","css","maxWidth","addClass","removeClass","image_gallery","$gallery","$","length","$grid","masonry","columnWidth","itemSelector","imagesLoaded","progress","$modals","magnificPopup","delegate","type","mainClass","tLoading","gallery","enabled","navigateByImgClick","preload","image","tError","verticalFit","titleSrc","item","el","html","on","e","instance","content"],"mappings":";;AAAA;;;;AAIA,IAAMA,aAAa,SAAbA,UAAa,CAACC,EAAD,EAAQ;AACzB,QAAMC,SAASD,GAAGE,IAAH,CAAQ,KAAR,CAAf;AACA,QAAMC,WAAWH,GAAGE,IAAH,CAAQ,YAAR,CAAjB;AACA,QAAME,IAAIH,OAAOI,KAAP,EAAV;AACA,QAAID,KAAK,CAAT,EAAY;AACV;AACD;AACD,QAAME,IAAIL,OAAOM,MAAP,EAAV;AACA,QAAMC,IAAIJ,IAAEE,CAAZ;AACA,QAAMG,eAAgBL,IAAI,GAAL,GAAY,MAAZ,GAAqBA,CAA1C;;AAGAD,aAASO,GAAT,CAAa,EAACC,UAAUF,YAAX,EAAb;;AAEA,QAAID,KAAK,CAAT,EAAY;AACRR,WAAGY,QAAH,CAAY,cAAZ;AACAZ,WAAGa,WAAH,CAAe,eAAf;AACH,KAHD,MAGO;AACHb,WAAGY,QAAH,CAAY,eAAZ;AACAZ,WAAGa,WAAH,CAAe,cAAf;AACH;AACF,CArBD;;AAuBA,IAAMC,gBAAgB,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,WAAWC,EAAE,gBAAF,CAAjB;AACA,QAAID,SAASE,MAAT,GAAkB,CAAtB,EAAyB;;AAEzB;AACA,QAAMC,QAAQH,SAASI,OAAT,CAAiB;AAC3BC,qBAAa,6BADc;AAE3BC,sBAAc;AAFa,KAAjB,CAAd;;AAKA;AACAH,UAAMI,YAAN,GAAqBC,QAArB,CAA+B,YAAM;AAAEL,cAAMC,OAAN,CAAc,QAAd;AAAyB,KAAhE;;AAGA,QAAMK,UAAUT,SAASU,aAAT,CAAuB;AACnCC,kBAAU,GADyB;AAEnCC,cAAM,OAF6B;AAGnCC,mBAAW,UAHwB;AAInCC,kBAAU,0BAJyB;AAKnCC,iBAAS,EAAEC,SAAS,IAAX,EAL0B;AAMnCC,4BAAoB,IANe;AAOnCC,iBAAS,CAAC,CAAD,EAAI,CAAJ,CAP0B;AAQnCC,eAAO;AACHC,oBAAQ,4DADL;AAEHC,yBAAa,KAFV;AAGHC,sBAAU,kBAACC,IAAD,EAAU;AAChB,uBAAOtB,EAAEsB,KAAKC,EAAP,EAAWrC,IAAX,CAAgB,YAAhB,EAA8BsC,IAA9B,EAAP;AACH;AALE;AAR4B,KAAvB,CAAhB;;AAiBAhB,YAAQiB,EAAR,CAAW,kDAAX,EAA+D,UAACC,CAAD,EAAO;AACpE,YAAI1B,EAAES,aAAF,CAAgBkB,QAApB,EAA8B;AAC5B5C,uBAAWiB,EAAES,aAAF,CAAgBkB,QAAhB,CAAyBC,OAApC;AACD;AACF,KAJD;AAKD,CApCD","file":"image-gallery.js","sourcesContent":["/*\n * Image gallery has dependencies on jquery, slick, accessible-modal-window\n */\n\nconst fitCaption = ($c) => {\n  const $image = $c.find('img');\n  const $caption = $c.find('figcaption');\n  const w = $image.width();\n  if (w == 0) {\n    return;\n  }\n  const h = $image.height();\n  const r = w/h;\n  const captionWidth = (w < 300) ? \"70vw\" : w;\n\n\n  $caption.css({maxWidth: captionWidth});\n\n  if (r <= 1) {\n      $c.addClass('mfp-portrait')\n      $c.removeClass('mfp-landscape')\n  } else {\n      $c.addClass('mfp-landscape')\n      $c.removeClass('mfp-portrait')\n  }\n}\n\nconst image_gallery = () => {\n  const $gallery = $('.image-gallery')\n  if ($gallery.length < 1) return;\n\n  // Fire up the masonry layout\n  const $grid = $gallery.masonry({\n      columnWidth: '.image-gallery__block-sizer',\n      itemSelector: '.image-gallery__block',\n  });\n\n  // Reflow content in the layout as each image is loaded\n  $grid.imagesLoaded().progress( () => { $grid.masonry('layout') });\n\n      \n  const $modals = $gallery.magnificPopup({\n      delegate: 'a',\n      type: 'image',\n      mainClass: 'mfp-fade',\n      tLoading: 'Loading image #%curr%...',\n      gallery: { enabled: true }, \n      navigateByImgClick: true,\n      preload: [0, 1],\n      image: {\n          tError: '<a href=\"%url%\">The image #%curr%</a> could not be loaded.',\n          verticalFit: false,\n          titleSrc: (item) => {\n              return $(item.el).find('figcaption').html();\n          }     \n      }\n  });\n\n  $modals.on('mfpResize mfpImageLoadComplete mfpChange mfpOpen', (e) => {\n    if ($.magnificPopup.instance) {\n      fitCaption($.magnificPopup.instance.content);\n    }\n  });               \n}\n"]}