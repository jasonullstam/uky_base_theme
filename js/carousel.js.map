{"version":3,"sources":["carousel.js"],"names":["carousel_single","cssEase","dots","lazyLoad","carousel_center","centerMode","centerPadding","sidesToShow","arrows","responsive","breakpoint","settings","slidesToShow","carousel","$carousels","$","config","length","positionArrowsSingle","slick","buttonTop","slideWidth","buttons","$nextArrow","add","$prevArrow","css","top","positionArrowsCentered","$currentSlide","$slides","currentSlide","imgHeight","find","height","on","e","image","imageSource","currentTarget","has","map","index","elem","classList","contains"],"mappings":";;AAAA,IAAMA,kBAAkB;AACpBC,aAAS,aADW;AAEpBC,UAAM,IAFc;AAGpBC,cAAU;AAHU,CAAxB;;AAMA,IAAMC,kBAAkB;AACpBH,aAAS,aADW;AAEpBE,cAAU,aAFU;AAGpBE,gBAAY,IAHQ;AAIpBH,UAAM,IAJc;AAKpBI,mBAAe,OALK;AAMpBC,iBAAa,CANO;AAOpBC,YAAQ,IAPY;AAQpBC,gBAAY,CACR;AACIC,oBAAY,GADhB;AAEIC,kBAAU;AACNN,wBAAY,KADN;AAENO,0BAAc;AAFR;AAFd,KADQ,EAQR;AACIF,oBAAY,GADhB;AAEIC,kBAAU;AACNN,wBAAY,KADN;AAENO,0BAAc;AAFR;AAFd,KARQ;AARQ,CAAxB;;AA0BA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACnB,QAAMC,aAAaC,EAAE,WAAF,CAAnB;AACA,QAAIC,SAAShB,eAAb,CAFmB,CAEW;AAC9B,QAAIc,WAAWG,MAAX,GAAoB,CAAxB,EAA2B;;AAE3B,QAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACpC,YAAIC,YAAYD,MAAME,UAAN,GAAmB,EAAnC;AACA,YAAIC,UAAUH,MAAMI,UAAN,CAAiBC,GAAjB,CAAqBL,MAAMM,UAA3B,CAAd;AACAH,gBAAQI,GAAR,CAAY,EAAEC,KAAKP,SAAP,EAAZ;AACH,KAJD;;AAMA,QAAMQ,yBAAyB,SAAzBA,sBAAyB,CAACT,KAAD,EAAW;AACtC,YAAMU,gBAAgBd,EAAEI,MAAMW,OAAN,CAAcX,MAAMY,YAApB,CAAF,CAAtB;AACA,YAAMC,YAAYH,cAAcI,IAAd,CAAmB,KAAnB,EAA0BC,MAA1B,EAAlB;AACA,YAAIF,YAAY,CAAhB,EAAmB;AACf,gBAAMZ,YAAYY,YAAY,EAA9B;AACA,gBAAMV,UAAUH,MAAMI,UAAN,CAAiBC,GAAjB,CAAqBL,MAAMM,UAA3B,CAAhB;AACAH,oBAAQI,GAAR,CAAY,EAAEC,KAAKP,SAAP,EAAZ;AACH;AACJ,KARD;;AAUAN,eAAWqB,EAAX,CAAc,YAAd,EAA4B,UAACC,CAAD,EAAIjB,KAAJ,EAAUkB,KAAV,EAAgBC,WAAhB,EAAgC,CAE3D,CAFD;AAGAxB,eAAWqB,EAAX,CAAc,8BAAd,EAA8C,UAACC,CAAD,EAAGjB,KAAH,EAAa;AACvD,YAAIJ,EAAEqB,EAAEG,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC7CtB,iCAAqBC,KAArB;AACH;AACD,YAAIJ,EAAEqB,EAAEG,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC7CZ,mCAAuBT,KAAvB;AACH;AACJ,KAPD;AAQAL,eAAW2B,GAAX,CAAe,UAACC,KAAD,EAAOC,IAAP,EAAgB;AAC3B;AACA,YAAIA,KAAKC,SAAL,CAAeC,QAAf,CAAwB,kBAAxB,CAAJ,EAAiD;AAC7C7B,qBAASZ,eAAT;AACH;AACDW,UAAE4B,IAAF,EAAQxB,KAAR,CAAcH,MAAd;AACH,KAND;AAOH,CAvCD","file":"carousel.js","sourcesContent":["const carousel_single = {\n    cssEase: 'ease-in-out',\n    dots: true,\n    lazyLoad: 'progressive'\n}\n\nconst carousel_center = {\n    cssEase: 'ease-in-out',\n    lazyLoad: 'progressive',\n    centerMode: true,\n    dots: true,\n    centerPadding: '110px',\n    sidesToShow: 3,\n    arrows: true,\n    responsive: [\n        {\n            breakpoint: 768,\n            settings: {\n                centerMode: false,\n                slidesToShow: 1\n            }\n        },\n        {\n            breakpoint: 480,\n            settings: {\n                centerMode: false,\n                slidesToShow: 1\n            }\n        }\n    ]        \n}\n\nconst carousel = () => {\n    const $carousels = $('.carousel');\n    let config = carousel_single; // default configuration\n    if ($carousels.length < 1) return;\n\n    const positionArrowsSingle = (slick) => {\n        let buttonTop = slick.slideWidth * .4;\n        let buttons = slick.$nextArrow.add(slick.$prevArrow);\n        buttons.css({ top: buttonTop });\n    }\n\n    const positionArrowsCentered = (slick) => {\n        const $currentSlide = $(slick.$slides[slick.currentSlide]);\n        const imgHeight = $currentSlide.find('img').height();\n        if (imgHeight > 0) {\n            const buttonTop = imgHeight * .5;\n            const buttons = slick.$nextArrow.add(slick.$prevArrow);\n            buttons.css({ top: buttonTop });\n        }\n    }\n\n    $carousels.on('lazyLoaded', (e, slick,image,imageSource) => {\n        \n    });\n    $carousels.on('init setPosition afterChange', (e,slick) => {\n        if ($(e.currentTarget).has('.carousel--single')) {\n            positionArrowsSingle(slick);\n        }\n        if ($(e.currentTarget).has('.carousel--center')) {\n            positionArrowsCentered(slick);\n        }\n    });\n    $carousels.map((index,elem) => {\n        // override configuration based on class name\n        if (elem.classList.contains('carousel--center')) {\n            config = carousel_center;\n        }\n        $(elem).slick(config);\n    });\n}\n"]}