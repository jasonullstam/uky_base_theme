{"version":3,"sources":["carousel.js"],"names":["carousel_single","cssEase","dots","lazyLoad","carousel_center","centerMode","centerPadding","sidesToShow","responsive","breakpoint","settings","arrows","slidesToShow","carousel","$carousels","$","config","length","positionArrows","slick","buttonTop","slideWidth","buttons","$nextArrow","add","$prevArrow","css","top","on","e","currentTarget","has","image","imageSource","currentSlide","map","index","elem","classList","contains"],"mappings":";;AAAA,IAAMA,kBAAkB;AACpBC,aAAS,aADW;AAEpBC,UAAM,IAFc;AAGpBC,cAAU;AAHU,CAAxB;;AAMA,IAAMC,kBAAkB;AACpBH,aAAS,aADW;AAEpBC,UAAM,IAFc;AAGpBC,cAAU,aAHU;AAIpBE,gBAAY,IAJQ;AAKpBC,mBAAe,OALK;AAMpBC,iBAAa,CANO;AAOpBC,gBAAY,CACR;AACIC,oBAAY,GADhB;AAEIC,kBAAU;AACNC,oBAAQ,IADF;AAENN,wBAAY,IAFN;AAGNC,2BAAe,MAHT;AAINM,0BAAc;AAJR;AAFd,KADQ,EAUR;AACIH,oBAAY,GADhB;AAEIC,kBAAU;AACNC,oBAAQ,IADF;AAENN,wBAAY,KAFN;AAGNO,0BAAc;AAHR;AAFd,KAVQ;AAPQ,CAAxB;;AA4BA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACnB,QAAMC,aAAaC,EAAE,WAAF,CAAnB;AACA,QAAIC,SAAShB,eAAb,CAFmB,CAEW;AAC9B,QAAIc,WAAWG,MAAX,GAAoB,CAAxB,EAA2B;;AAE3B,QAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,YAAIC,YAAYD,MAAME,UAAN,GAAmB,EAAnC;AACA,YAAIC,UAAUH,MAAMI,UAAN,CAAiBC,GAAjB,CAAqBL,MAAMM,UAA3B,CAAd;AACAH,gBAAQI,GAAR,CAAY,EAAEC,KAAKP,SAAP,EAAZ;AACA;AACH,KALD;;AAOAN,eAAWc,EAAX,CAAc,MAAd,EAAsB,UAACC,CAAD,EAAIV,KAAJ,EAAc;AAChC,YAAIJ,EAAEc,EAAEC,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC7Cb,2BAAeC,KAAf;AACH;AACJ,KAJD;AAKAL,eAAWc,EAAX,CAAc,YAAd,EAA4B,UAACC,CAAD,EAAIV,KAAJ,EAAUa,KAAV,EAAgBC,WAAhB,EAAgC,CAE3D,CAFD;AAGAnB,eAAWc,EAAX,CAAc,aAAd,EAA6B,UAACC,CAAD,EAAGV,KAAH,EAASe,YAAT,EAA0B,CAEtD,CAFD;AAGApB,eAAWc,EAAX,CAAc,aAAd,EAA6B,UAACC,CAAD,EAAGV,KAAH,EAAa;AACtC,YAAIJ,EAAEc,EAAEC,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC7Cb,2BAAeC,KAAf;AACH;AACJ,KAJD;AAKAL,eAAWqB,GAAX,CAAe,UAACC,KAAD,EAAOC,IAAP,EAAgB;AAC3B;AACA,YAAIA,KAAKC,SAAL,CAAeC,QAAf,CAAwB,kBAAxB,CAAJ,EAAiD;AAC7CvB,qBAASZ,eAAT;AACH;AACDW,UAAEsB,IAAF,EAAQlB,KAAR,CAAcH,MAAd;AACH,KAND;AAOH,CAnCD","file":"carousel.js","sourcesContent":["const carousel_single = {\n    cssEase: 'ease-in-out',\n    dots: true,\n    lazyLoad: 'progressive'\n}\n\nconst carousel_center = {\n    cssEase: 'ease-in-out',\n    dots: true,\n    lazyLoad: 'progressive',\n    centerMode: true,\n    centerPadding: '100px',\n    sidesToShow: 3,\n    responsive: [\n        {\n            breakpoint: 768,\n            settings: {\n                arrows: true,\n                centerMode: true,\n                centerPadding: '40px',\n                slidesToShow: 3\n            }\n        },\n        {\n            breakpoint: 480,\n            settings: {\n                arrows: true,\n                centerMode: false,\n                slidesToShow: 3\n            }\n        }\n    ]        \n}\n\nconst carousel = () => {\n    const $carousels = $('.carousel');\n    let config = carousel_single; // default configuration\n    if ($carousels.length < 1) return;\n\n    const positionArrows = (slick) => {\n        let buttonTop = slick.slideWidth * .4;\n        let buttons = slick.$nextArrow.add(slick.$prevArrow);\n        buttons.css({ top: buttonTop });\n        //arrows should be positioned at 40% of the width of the slide track\n    }\n\n    $carousels.on('init', (e, slick) => {\n        if ($(e.currentTarget).has('.carousel--single')) {\n            positionArrows(slick);\n        }\n    });\n    $carousels.on('lazyLoaded', (e, slick,image,imageSource) => {\n        \n    });\n    $carousels.on('afterChange', (e,slick,currentSlide) => {\n        \n    });\n    $carousels.on('setPosition', (e,slick) => {\n        if ($(e.currentTarget).has('.carousel--single')) {\n            positionArrows(slick);\n        }\n    });\n    $carousels.map((index,elem) => {\n        // override configuration based on class name\n        if (elem.classList.contains('carousel--center')) {\n            config = carousel_center;\n        }\n        $(elem).slick(config);\n    });\n}\n"]}