{"version":3,"sources":["carousel.js"],"names":["carousel_single","cssEase","dots","lazyLoad","carousel_center","centerMode","centerPadding","sidesToShow","arrows","responsive","breakpoint","settings","slidesToShow","carousel","$carousels","$","config","length","positionArrowsSingle","slick","buttonTop","slideWidth","buttons","$nextArrow","add","$prevArrow","css","top","positionArrowsCentered","$currentSlide","$slides","currentSlide","$currentImage","find","$currentTrack","$slideTrack","imgHeight","height","imgNatHeight","prop","padding","paddingTop","on","e","currentTarget","has","map","index","elem","classList","contains"],"mappings":";;AAAA,IAAMA,kBAAkB;AACtBC,WAAS,aADa;AAEtBC,QAAM,IAFgB;AAGtBC,YAAU;AAHY,CAAxB;;AAMA,IAAMC,kBAAkB;AACtBH,WAAS,aADa;AAEtBE,YAAU,aAFY;AAGtBE,cAAY,IAHU;AAItBH,QAAM,IAJgB;AAKtBI,iBAAe,OALO;AAMtBC,eAAa,CANS;AAOtBC,UAAQ,IAPc;AAQtBC,cAAY,CACV;AACEC,gBAAY,GADd;AAEEC,cAAU;AACRN,kBAAY,KADJ;AAERO,oBAAc;AAFN;AAFZ,GADU,EAQV;AACEF,gBAAY,GADd;AAEEC,cAAU;AACRN,kBAAY,KADJ;AAERO,oBAAc;AAFN;AAFZ,GARU;AARU,CAAxB;;AA0BA,IAAMC,WAAW,SAAXA,QAAW,GAAM;AACrB,MAAMC,aAAaC,EAAE,WAAF,CAAnB;AACA,MAAIC,SAAShB,eAAb,CAFqB,CAES;AAC9B,MAAIc,WAAWG,MAAX,GAAoB,CAAxB,EAA2B;;AAE3B,MAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtC,QAAIC,YAAYD,MAAME,UAAN,GAAmB,EAAnC;AACA,QAAIC,UAAUH,MAAMI,UAAN,CAAiBC,GAAjB,CAAqBL,MAAMM,UAA3B,CAAd;AACAH,YAAQI,GAAR,CAAY;AACVC,WAAKP;AADK,KAAZ;AAGD,GAND;;AAQA,MAAMQ,yBAAyB,SAAzBA,sBAAyB,CAACT,KAAD,EAAW;AACxC,QAAMU,gBAAgBd,EAAEI,MAAMW,OAAN,CAAcX,MAAMY,YAApB,CAAF,CAAtB;AACA,QAAMC,gBAAgBH,cAAcI,IAAd,CAAmB,KAAnB,CAAtB;AACA,QAAMC,gBAAgBf,MAAMgB,WAA5B;AACA,QAAMC,YAAYJ,cAAcK,MAAd,EAAlB;AACA,QAAMC,eAAeN,cAAcO,IAAd,CAAmB,eAAnB,CAArB;AACA,QAAIH,YAAY,CAAhB,EAAmB;AACjB,UAAMI,UAAU,CAACJ,YAAYE,YAAb,IAA6B,CAA7C;AACA,UAAMlB,YAAagB,YAAY,EAAb,GAAmBI,OAArC;AACA,UAAMlB,UAAUH,MAAMI,UAAN,CAAiBC,GAAjB,CAAqBL,MAAMM,UAA3B,CAAhB;AACAH,cAAQI,GAAR,CAAY;AACVC,aAAKP;AADK,OAAZ;AAGAc,oBAAcR,GAAd,CAAkB;AAChBe,oBAAYD;AADI,OAAlB;AAGD;AACF,GAjBD;;AAmBA1B,aAAW4B,EAAX,CAAc,8BAAd,EAA8C,UAACC,CAAD,EAAIxB,KAAJ,EAAc;AAC1D,QAAIJ,EAAE4B,EAAEC,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/C3B,2BAAqBC,KAArB;AACD;AACD,QAAIJ,EAAE4B,EAAEC,aAAJ,EAAmBC,GAAnB,CAAuB,mBAAvB,CAAJ,EAAiD;AAC/CjB,6BAAuBT,KAAvB;AACD;AACF,GAPD;;AASAL,aAAWgC,GAAX,CAAe,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC9B;AACA,QAAIA,KAAKC,SAAL,CAAeC,QAAf,CAAwB,kBAAxB,CAAJ,EAAiD;AAC/ClC,eAASZ,eAAT;AACD,KAFD,MAEO;AACLY,eAAShB,eAAT;AACD;AACDe,MAAEiC,IAAF,EAAQ7B,KAAR,CAAcH,MAAd;AACD,GARD;AASD,CAlDD","file":"carousel.js","sourcesContent":["const carousel_single = {\n  cssEase: 'ease-in-out',\n  dots: true,\n  lazyLoad: 'progressive'\n};\n\nconst carousel_center = {\n  cssEase: 'ease-in-out',\n  lazyLoad: 'progressive',\n  centerMode: true,\n  dots: true,\n  centerPadding: '110px',\n  sidesToShow: 3,\n  arrows: true,\n  responsive: [\n    {\n      breakpoint: 768,\n      settings: {\n        centerMode: false,\n        slidesToShow: 1\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        centerMode: false,\n        slidesToShow: 1\n      }\n    }\n  ]\n};\n\nconst carousel = () => {\n  const $carousels = $('.carousel');\n  let config = carousel_single; // default configuration\n  if ($carousels.length < 1) return;\n\n  const positionArrowsSingle = (slick) => {\n    let buttonTop = slick.slideWidth * .4;\n    let buttons = slick.$nextArrow.add(slick.$prevArrow);\n    buttons.css({\n      top: buttonTop\n    });\n  };\n\n  const positionArrowsCentered = (slick) => {\n    const $currentSlide = $(slick.$slides[slick.currentSlide]);\n    const $currentImage = $currentSlide.find('img');\n    const $currentTrack = slick.$slideTrack;\n    const imgHeight = $currentImage.height();\n    const imgNatHeight = $currentImage.prop('naturalHeight');\n    if (imgHeight > 0) {\n      const padding = (imgHeight - imgNatHeight) / 2;\n      const buttonTop = (imgHeight * .5) + padding;\n      const buttons = slick.$nextArrow.add(slick.$prevArrow);\n      buttons.css({\n        top: buttonTop\n      });\n      $currentTrack.css({\n        paddingTop: padding\n      });\n    }\n  };\n\n  $carousels.on('init setPosition afterChange', (e, slick) => {\n    if ($(e.currentTarget).has('.carousel--single')) {\n      positionArrowsSingle(slick);\n    }\n    if ($(e.currentTarget).has('.carousel--center')) {\n      positionArrowsCentered(slick);\n    }\n  });\n\n  $carousels.map((index, elem) => {\n    // override configuration based on class name\n    if (elem.classList.contains('carousel--center')) {\n      config = carousel_center;\n    } else {\n      config = carousel_single;\n    }\n    $(elem).slick(config);\n  });\n};\n"]}